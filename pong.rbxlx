<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Workspace" referent="RBX410F21D83960426483588B28BC333E4D">
		<Properties>
			<bool name="AllowThirdPartySales">false</bool>
			<token name="AnimationWeightedBlendFix">0</token>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<token name="ClientAnimatorThrottling">0</token>
			<string name="CollisionGroups">Default^0^-1</string>
			<Ref name="CurrentCamera">RBX49A913261C9245E695B612B56BEBFFA5</Ref>
			<double name="DistributedGameTime">0</double>
			<bool name="ExplicitAutoJoints">true</bool>
			<float name="FallenPartsDestroyHeight">-500</float>
			<float name="Gravity">196.199997</float>
			<token name="HumanoidOnlySetCollisionsOnStateChange">0</token>
			<token name="InterpolationThrottling">0</token>
			<token name="LevelOfDetail">0</token>
			<token name="MeshPartHeadsAndAccessories">0</token>
			<CoordinateFrame name="ModelMeshCFrame">
				<X>0</X>
				<Y>0</Y>
				<Z>0</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
			<Vector3 name="ModelMeshSize">
				<X>0</X>
				<Y>0</Y>
				<Z>0</Z>
			</Vector3>
			<string name="Name">Workspace</string>
			<bool name="NeedsPivotMigration">false</bool>
			<token name="PhysicsSteppingMethod">0</token>
			<Ref name="PrimaryPart">null</Ref>
			<token name="Retargeting">0</token>
			<token name="SignalBehavior">0</token>
			<int64 name="SourceAssetId">-1</int64>
			<token name="StreamOutBehavior">0</token>
			<bool name="StreamingEnabled">false</bool>
			<int name="StreamingMinRadius">64</int>
			<token name="StreamingPauseMode">0</token>
			<int name="StreamingTargetRadius">1024</int>
			<BinaryString name="Tags"></BinaryString>
			<bool name="TerrainWeldsFixed">true</bool>
			<bool name="TouchesUseCollisionGroups">false</bool>
			<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af00017037</UniqueId>
			<OptionalCoordinateFrame name="WorldPivotData">
				<CFrame>
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CFrame>
			</OptionalCoordinateFrame>
		</Properties>
		<Item class="Camera" referent="RBX49A913261C9245E695B612B56BEBFFA5">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<CoordinateFrame name="CFrame">
					<X>39.099472</X>
					<Y>31.9098797</Y>
					<Z>49.9157181</Z>
					<R00>0.902323961</R00>
					<R01>-0.183218867</R01>
					<R02>0.390182436</R02>
					<R10>-0</R10>
					<R11>0.905172706</R11>
					<R12>0.425044</R12>
					<R20>-0.431058586</R20>
					<R21>-0.383527398</R21>
					<R22>0.81675899</R22>
				</CoordinateFrame>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<float name="FieldOfView">70</float>
				<token name="FieldOfViewMode">0</token>
				<CoordinateFrame name="Focus">
					<X>38.3191071</X>
					<Y>31.0597916</Y>
					<Z>48.2821999</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="HeadLocked">true</bool>
				<float name="HeadScale">1</float>
				<string name="Name">Camera</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af0001851d</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBXF1158A85558B42F4873C8C9FDF9707A9">
			<Properties>
				<bool name="Anchored">true</bool>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>0</X>
					<Y>-2</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4294506744</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<bool name="Massless">false</bool>
				<token name="Material">848</token>
				<string name="Name">Ground</string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af00018523</UniqueId>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">0</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>100</X>
					<Y>4</Y>
					<Z>32</Z>
				</Vector3>
			</Properties>
			<Item class="Decal" referent="RBX76E9E5A12BFB4A57B7BB54CB2EC730DF">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<Color3 name="Color3">
						<R>1</R>
						<G>1</G>
						<B>1</B>
					</Color3>
					<token name="Face">1</token>
					<string name="Name">Decal</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<Content name="Texture"><url>rbxassetid://7796413907</url></Content>
					<float name="Transparency">0</float>
					<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af00036a2f</UniqueId>
					<int name="ZIndex">1</int>
				</Properties>
			</Item>
		</Item>
		<Item class="Terrain" referent="RBXC72989D0705745C5A0B275C00421E0A5">
			<Properties>
				<token name="AcquisitionMethod">0</token>
				<bool name="Anchored">true</bool>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="Decoration">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<BinaryString name="MaterialColors"><![CDATA[AAAAAAAAan8/P39rf2Y/ilY+j35fi21PZmxvZbDqw8faiVpHOi4kHh4lZlw76JxKc3trhHta
gcLgc4RKxr21zq2UlJSM]]></BinaryString>
				<string name="Name">Terrain</string>
				<BinaryString name="PhysicsGrid">AgMAAAAAAAAAAAAAAAA=</BinaryString>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<BinaryString name="SmoothGrid">AQU=</BinaryString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af0001852b</UniqueId>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Color3 name="WaterColor">
					<R>0.0470588282</R>
					<G>0.329411775</G>
					<B>0.360784322</B>
				</Color3>
				<float name="WaterReflectance">1</float>
				<float name="WaterTransparency">0.300000012</float>
				<float name="WaterWaveSize">0.150000006</float>
				<float name="WaterWaveSpeed">10</float>
				<Vector3 name="size">
					<X>2044</X>
					<Y>252</Y>
					<Z>2044</Z>
				</Vector3>
			</Properties>
		</Item>
		<Item class="Model" referent="RBXB772C9B898A14BCAB83DCC1DF34A1375">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<token name="LevelOfDetail">0</token>
				<CoordinateFrame name="ModelMeshCFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
				<Vector3 name="ModelMeshSize">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<string name="Name">Wall</string>
				<bool name="NeedsPivotMigration">false</bool>
				<Ref name="PrimaryPart">null</Ref>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af0009e4e8</UniqueId>
				<OptionalCoordinateFrame name="WorldPivotData">
					<CFrame>
						<X>0.00240516663</X>
						<Y>0.52401495</Y>
						<Z>26.5799332</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CFrame>
				</OptionalCoordinateFrame>
			</Properties>
			<Item class="Part" referent="RBXE891A139D6F040948930F46B91AB342C">
				<Properties>
					<bool name="Anchored">true</bool>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<CoordinateFrame name="CFrame">
						<X>0</X>
						<Y>0.5</Y>
						<Z>15.5</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<bool name="CanCollide">true</bool>
					<bool name="CanQuery">true</bool>
					<bool name="CanTouch">true</bool>
					<bool name="CastShadow">true</bool>
					<int name="CollisionGroupId">0</int>
					<Color3uint8 name="Color3uint8">4294506744</Color3uint8>
					<PhysicalProperties name="CustomPhysicalProperties">
						<CustomPhysics>false</CustomPhysics>
					</PhysicalProperties>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<bool name="Massless">false</bool>
					<token name="Material">848</token>
					<string name="Name">back</string>
					<CoordinateFrame name="PivotOffset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<int name="RootPriority">0</int>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af0009c720</UniqueId>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">1</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>100</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Part" referent="RBX525E08FBF030488B9BA9426AB5418921">
				<Properties>
					<bool name="Anchored">true</bool>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<CoordinateFrame name="CFrame">
						<X>0</X>
						<Y>0.5</Y>
						<Z>-15.5</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<bool name="CanCollide">true</bool>
					<bool name="CanQuery">true</bool>
					<bool name="CanTouch">true</bool>
					<bool name="CastShadow">true</bool>
					<int name="CollisionGroupId">0</int>
					<Color3uint8 name="Color3uint8">4294506744</Color3uint8>
					<PhysicalProperties name="CustomPhysicalProperties">
						<CustomPhysics>false</CustomPhysics>
					</PhysicalProperties>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<bool name="Massless">false</bool>
					<token name="Material">848</token>
					<string name="Name">front</string>
					<CoordinateFrame name="PivotOffset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<int name="RootPriority">0</int>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af0009e7e9</UniqueId>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">1</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>100</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
		</Item>
		<Item class="WedgePart" referent="RBX83608662DF7B46538D287024252E478D">
			<Properties>
				<bool name="Anchored">true</bool>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-42</X>
					<Y>3</Y>
					<Z>0</Z>
					<R00>-4.37113883e-08</R00>
					<R01>0</R01>
					<R02>1</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>-1</R20>
					<R21>0</R21>
					<R22>-4.37113883e-08</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">false</bool>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4280374457</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">288</token>
				<string name="Name">goal_left</string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0.5</float>
				<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af000ba532</UniqueId>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">1</token>
				<Vector3 name="size">
					<X>30</X>
					<Y>6</Y>
					<Z>12</Z>
				</Vector3>
			</Properties>
			<Item class="BillboardGui" referent="RBXBFFC7DDAFAF64B6098501B285E516AB9">
				<Properties>
					<bool name="Active">true</bool>
					<Ref name="Adornee">null</Ref>
					<bool name="AlwaysOnTop">false</bool>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<float name="Brightness">1</float>
					<bool name="ClipsDescendants">false</bool>
					<float name="DistanceLowerLimit">0</float>
					<float name="DistanceStep">0</float>
					<float name="DistanceUpperLimit">-1</float>
					<bool name="Enabled">true</bool>
					<Vector3 name="ExtentsOffset">
						<X>-1</X>
						<Y>0.5</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="ExtentsOffsetWorldSpace">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="LightInfluence">0</float>
					<float name="MaxDistance">INF</float>
					<string name="Name">BillboardGui</string>
					<Ref name="PlayerToHideFrom">null</Ref>
					<bool name="ResetOnSpawn">true</bool>
					<Ref name="RootLocalizationTable">null</Ref>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>200</XO>
						<YS>0</YS>
						<YO>50</YO>
					</UDim2>
					<Vector2 name="SizeOffset">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<int64 name="SourceAssetId">-1</int64>
					<Vector3 name="StudsOffset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="StudsOffsetWorldSpace">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">0241ee8883f291ef0181ac6c00d5bb66</UniqueId>
					<token name="ZIndexBehavior">1</token>
				</Properties>
				<Item class="TextLabel" referent="RBX3ACF9E26A08B4F32A4211ECE4A5010ED">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">false</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">2</token>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">13</token>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<string name="Name">TextLabel</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>200</XO>
							<YS>0</YS>
							<YO>50</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">0</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">100</float>
						<Color3 name="TextStrokeColor3">
							<R>0.129411772</R>
							<G>0.329411775</G>
							<B>0.725490212</B>
						</Color3>
						<float name="TextStrokeTransparency">0</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<UniqueId name="UniqueId">0241ee8883f291ef0181ac6c00d5bd30</UniqueId>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
			</Item>
		</Item>
		<Item class="WedgePart" referent="RBXD7A0E9BA43EE407BA73087D2E116E84A">
			<Properties>
				<bool name="Anchored">true</bool>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>42</X>
					<Y>3</Y>
					<Z>0</Z>
					<R00>0</R00>
					<R01>0</R01>
					<R02>-0.99999994</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>1</R20>
					<R21>0</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">false</bool>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4294924633</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">288</token>
				<string name="Name">goal_right</string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0.5</float>
				<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af000bc996</UniqueId>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">1</token>
				<Vector3 name="size">
					<X>30</X>
					<Y>6</Y>
					<Z>12</Z>
				</Vector3>
			</Properties>
			<Item class="BillboardGui" referent="RBXE48EA69614EE405E868677561CEE6844">
				<Properties>
					<bool name="Active">true</bool>
					<Ref name="Adornee">null</Ref>
					<bool name="AlwaysOnTop">false</bool>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<float name="Brightness">1</float>
					<bool name="ClipsDescendants">false</bool>
					<float name="DistanceLowerLimit">0</float>
					<float name="DistanceStep">0</float>
					<float name="DistanceUpperLimit">-1</float>
					<bool name="Enabled">true</bool>
					<Vector3 name="ExtentsOffset">
						<X>1</X>
						<Y>0.5</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="ExtentsOffsetWorldSpace">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="LightInfluence">0</float>
					<float name="MaxDistance">INF</float>
					<string name="Name">BillboardGui</string>
					<Ref name="PlayerToHideFrom">null</Ref>
					<bool name="ResetOnSpawn">true</bool>
					<Ref name="RootLocalizationTable">null</Ref>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>200</XO>
						<YS>0</YS>
						<YO>50</YO>
					</UDim2>
					<Vector2 name="SizeOffset">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<int64 name="SourceAssetId">-1</int64>
					<Vector3 name="StudsOffset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="StudsOffsetWorldSpace">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">0241ee8883f291ef0181ac6c00d84e6e</UniqueId>
					<token name="ZIndexBehavior">1</token>
				</Properties>
				<Item class="TextLabel" referent="RBX0F9F32CE94894B0A95B664D67D12F3CF">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">false</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">2</token>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">13</token>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<int name="MaxVisibleGraphemes">-1</int>
						<string name="Name">TextLabel</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>200</XO>
							<YS>0</YS>
							<YO>50</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">0</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">100</float>
						<Color3 name="TextStrokeColor3">
							<R>1</R>
							<G>0.349019617</G>
							<B>0.349019617</B>
						</Color3>
						<float name="TextStrokeTransparency">0</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<UniqueId name="UniqueId">0241ee8883f291ef0181ac6c00d84e6f</UniqueId>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
			</Item>
		</Item>
		<Item class="ColorCorrectionEffect" referent="RBXD73CE853D5D74FDAAC1462D306479898">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<float name="Brightness">0.300000012</float>
				<float name="Contrast">0</float>
				<bool name="Enabled">true</bool>
				<string name="Name">ColorCorrection</string>
				<float name="Saturation">0</float>
				<int64 name="SourceAssetId">5446998963</int64>
				<BinaryString name="Tags"></BinaryString>
				<Color3 name="TintColor">
					<R>1</R>
					<G>1</G>
					<B>1</B>
				</Color3>
				<UniqueId name="UniqueId">0241ee8883f291ef0181ac6c00b1e4f3</UniqueId>
			</Properties>
		</Item>
	</Item>
	<Item class="SoundService" referent="RBXE5949EC6FE2045749A7B268AAF0ABA30">
		<Properties>
			<token name="AmbientReverb">0</token>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<float name="DistanceFactor">3.32999992</float>
			<float name="DopplerScale">1</float>
			<string name="Name">SoundService</string>
			<bool name="RespectFilteringEnabled">true</bool>
			<float name="RolloffScale">1</float>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af00018287</UniqueId>
		</Properties>
	</Item>
	<Item class="NonReplicatedCSGDictionaryService" referent="RBX26484C62FA1F4A06AEBBFF2BC2176EA6">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">NonReplicatedCSGDictionaryService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af00018293</UniqueId>
		</Properties>
	</Item>
	<Item class="CSGDictionaryService" referent="RBX20BD418A9E9844A49E5C90C1BDFC8365">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">CSGDictionaryService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af00018294</UniqueId>
		</Properties>
	</Item>
	<Item class="Chat" referent="RBX5BA112B07BC349FE9CBC0806A3A3B8D3">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="BubbleChatEnabled">true</bool>
			<bool name="LoadDefaultChat">true</bool>
			<string name="Name">Chat</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af00018298</UniqueId>
		</Properties>
	</Item>
	<Item class="TimerService" referent="RBXA360D83505BC49F9A52841A3F79A49DC">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">Instance</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af00018299</UniqueId>
		</Properties>
	</Item>
	<Item class="Players" referent="RBX11000AF141734C20AEE631EAAECC8BC9">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="CharacterAutoLoads">true</bool>
			<int name="MaxPlayersInternal">30</int>
			<string name="Name">Players</string>
			<int name="PreferredPlayersInternal">30</int>
			<float name="RespawnTime">3</float>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af0001829b</UniqueId>
		</Properties>
	</Item>
	<Item class="ReplicatedFirst" referent="RBX246243EEB6154E1D8DB74C3A0954EFF9">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">ReplicatedFirst</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af0001829f</UniqueId>
		</Properties>
	</Item>
	<Item class="TweenService" referent="RBX3BBC5BFCC1A24EC592510AD2B07287D7">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">TweenService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af000182a1</UniqueId>
		</Properties>
	</Item>
	<Item class="PermissionsService" referent="RBX4015366983DE4172B2D2C6333414A6FA">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">PermissionsService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af000182a5</UniqueId>
		</Properties>
	</Item>
	<Item class="PlayerEmulatorService" referent="RBX00D4E8FA11574F67BE3691173A94E4B0">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="CustomPoliciesEnabled">false</bool>
			<string name="EmulatedCountryCode"></string>
			<string name="EmulatedGameLocale"></string>
			<string name="Name">PlayerEmulatorService</string>
			<bool name="PlayerEmulationEnabled">false</bool>
			<BinaryString name="SerializedEmulatedPolicyInfo"></BinaryString>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af000182a7</UniqueId>
		</Properties>
	</Item>
	<Item class="StudioData" referent="RBXC7DCE67B720E4C29B5C489599497C1DF">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<int64 name="CommitInflightAuthorId">0</int64>
			<string name="CommitInflightGuid"></string>
			<int name="CommitInflightPlaceVersion">0</int>
			<bool name="EnableScriptCollabByDefaultOnLoad">true</bool>
			<bool name="EnableTeamCreateStreamingOnLoad">false</bool>
			<string name="Name">StudioData</string>
			<int64 name="SourceAssetId">-1</int64>
			<int64 name="SrcPlaceId">7782218223</int64>
			<int64 name="SrcUniverseId">3016370887</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af000182a9</UniqueId>
		</Properties>
	</Item>
	<Item class="StarterPlayer" referent="RBXF7E673CF6D1147968774AF1D9D0C0E52">
		<Properties>
			<bool name="AllowCustomAnimations">true</bool>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="AutoJumpEnabled">true</bool>
			<float name="CameraMaxZoomDistance">128</float>
			<float name="CameraMinZoomDistance">0.5</float>
			<token name="CameraMode">0</token>
			<float name="CharacterJumpHeight">7.19999981</float>
			<float name="CharacterJumpPower">50</float>
			<float name="CharacterMaxSlopeAngle">89</float>
			<bool name="CharacterUseJumpPower">false</bool>
			<float name="CharacterWalkSpeed">16</float>
			<token name="DevCameraOcclusionMode">0</token>
			<token name="DevComputerCameraMovementMode">0</token>
			<token name="DevComputerMovementMode">0</token>
			<token name="DevTouchCameraMovementMode">0</token>
			<token name="DevTouchMovementMode">0</token>
			<bool name="EnableMouseLockOption">true</bool>
			<int64 name="GameSettingsAssetIDFace">0</int64>
			<int64 name="GameSettingsAssetIDHead">0</int64>
			<int64 name="GameSettingsAssetIDLeftArm">0</int64>
			<int64 name="GameSettingsAssetIDLeftLeg">0</int64>
			<int64 name="GameSettingsAssetIDPants">0</int64>
			<int64 name="GameSettingsAssetIDRightArm">0</int64>
			<int64 name="GameSettingsAssetIDRightLeg">0</int64>
			<int64 name="GameSettingsAssetIDShirt">0</int64>
			<int64 name="GameSettingsAssetIDTeeShirt">0</int64>
			<int64 name="GameSettingsAssetIDTorso">0</int64>
			<token name="GameSettingsAvatar">1</token>
			<token name="GameSettingsR15Collision">0</token>
			<NumberRange name="GameSettingsScaleRangeBodyType">0 1 </NumberRange>
			<NumberRange name="GameSettingsScaleRangeHead">0.95 1 </NumberRange>
			<NumberRange name="GameSettingsScaleRangeHeight">0.9 1.05 </NumberRange>
			<NumberRange name="GameSettingsScaleRangeProportion">0 1 </NumberRange>
			<NumberRange name="GameSettingsScaleRangeWidth">0.7 1 </NumberRange>
			<float name="HealthDisplayDistance">100</float>
			<bool name="LoadCharacterAppearance">true</bool>
			<token name="LoadCharacterLayeredClothing">0</token>
			<string name="Name">StarterPlayer</string>
			<float name="NameDisplayDistance">100</float>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af000182aa</UniqueId>
			<bool name="UserEmotesEnabled">true</bool>
		</Properties>
		<Item class="StarterPlayerScripts" referent="RBXC3D24CBCA3E9438FACFDA357A9E8878C">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<string name="Name">StarterPlayerScripts</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af00018527</UniqueId>
			</Properties>
			<Item class="Folder" referent="RBXACD7C1E3ABAD469192A58FC2593D0D64">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<string name="Name">systems</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af00020f85</UniqueId>
				</Properties>
				<Item class="ModuleScript" referent="RBXC600C1BF378844B8BD6A936DA05C33AB">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">CameraSystem</string>
						<string name="ScriptGuid">{08DEC31C-22BE-4373-9BCD-ACD671DAEB63}</string>
						<ProtectedString name="Source"><![CDATA[local ECS = _G.ECS

local Client = script.Parent.Parent
local Constants = require(Client.Constants)

local CFRAME = CFrame.new(Vector3.new(0, Constants.CAMERA_DISTANCE, 30), Vector3.new(0, 0, 0))

-- sistema de camera
local CameraSystem = ECS.System("render", 1, function()
   game.Workspace.CurrentCamera.CFrame = CFRAME
end)

return CameraSystem
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af00020f87</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBXF8A95B0F21154AB0BC653AC5C9E69F16">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">PaddleSystem</string>
						<string name="ScriptGuid">{DBA66A71-31B9-4248-83DF-62C288362DAD}</string>
						<ProtectedString name="Source"><![CDATA[local ECS = _G.ECS

local Client = script.Parent.Parent
local Utility = require(Client.Utility)
local Constants = require(Client.Constants)

local Components = Client.components
local Paddle = require(Components.Paddle)
local Position = require(Components.Position)
local BasePart = require(Components.BasePart)

local PaddleSystem = ECS.System("process", 2, ECS.Query.All(Paddle))

function PaddleSystem:Update(Time)
   self:Result():ForEach(function(entity)
      local paddle = entity[Paddle]
      if paddle.target ~= paddle.position then
         paddle.position = Utility.lerp(paddle.position, paddle.target, Constants.PLAYER_SPEED * Time.DeltaFixed)
         entity[Position].value = self:GetPaddlePosition(paddle)
      end
   end)
end

function PaddleSystem:OnEnter(Time, entity)
   local paddle = entity[Paddle]
   paddle.target = 0
   paddle.position = 0

   local positionVec3 = self:GetPaddlePosition(paddle)
   entity[Position] = Position(positionVec3)

   local part = Instance.new("Part")
   part.Name = "Paddle_"..paddle.side
   part.Size = Vector3.new(Constants.PADDLE_WIDTH, 2, Constants.PADDLE_HEIGHT)
   part.Shape = Enum.PartType.Block
   part.Anchored = true
   part.Position = positionVec3
   part.Material = Enum.Material.SmoothPlastic

   if paddle.side == "left" then
      part.Color = Color3.fromRGB(33, 84, 185)
   else
      part.Color = Color3.fromRGB(255, 89, 89)
   end
   
   part.Parent = game.Workspace
   entity[BasePart] = BasePart(part)
end

function PaddleSystem:GetPaddlePosition(paddle)

   local xPos = Constants.COURT_WIDTH/2
   if paddle.side == "left" then
      xPos = xPos * -1
   end
   
   local zPosMax = Constants.COURT_HEIGHT/2 - Constants.PADDLE_HEIGHT/2
   local zPos = Utility.map(paddle.position, -1, 1, -zPosMax, zPosMax)
   return Vector3.new(xPos, 1, zPos)
end

return PaddleSystem
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af00020f88</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX0F4BE224B6BD439C9F5BDB855A8A8DB7">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">BallSystem</string>
						<string name="ScriptGuid">{946069F3-7725-4355-8D98-33EE940D19E7}</string>
						<ProtectedString name="Source"><![CDATA[local ECS = _G.ECS

local Client = script.Parent.Parent
local Constants = require(Client.Constants)

local Components = Client.components
local Ball = require(Components.Ball)
local Position = require(Components.Position)
local Velocity = require(Components.Velocity)
local BasePart = require(Components.BasePart)
local AudioSource = require(Components.AudioSource)

local ballMaxX = Constants.COURT_WIDTH/2
local ballMaxZ = Constants.COURT_HEIGHT/2 - Constants.BALL_RADIUS

local BallSystem = ECS.System("transform", 1, ECS.Query.All(Ball))

function BallSystem:Update(Time)
   local scored = false
   local scoredSide

   self:Result():ForEach(function(entity)
      local ball = entity[Ball]
      local position = entity[Position]
      local velocity = entity[Velocity]
   
      local posValue = position.value
   
      if posValue.Z > ballMaxZ or posValue.Z < -ballMaxZ then
         -- Reverse z velocity if ball hits a vertical wall
         local v = velocity.value
         velocity.value = Vector3.new(v.X, v.Y, v.Z*-1)

         if posValue.Z > ballMaxZ then
            posValue = Vector3.new(posValue.X, posValue.Y, ballMaxZ)
         else
            posValue = Vector3.new(posValue.X, posValue.Y, -ballMaxZ )
         end
         position.value = posValue

         -- sound effect
         self._world:Entity(
            Position(posValue),
            AudioSource({ clip = "rbxassetid://4458219865" })
         )
      end
   end)
end

function BallSystem:OnEnter(Time, entity)
   
   local radius = Constants.BALL_RADIUS
   local size = radius*2

   local part = Instance.new("Part")
   part.Name = "Ball"
   part.Anchored = true
   part.Size = Vector3.new(size, size, size)
   part.Shape = Enum.PartType.Ball
   part.Color = Color3.fromRGB(255, 255, 255)
   part.Material = Enum.Material.Neon
   part.Parent = game.Workspace
   entity[BasePart] = BasePart(part)


   local speed = Constants.BALL_SERVE_SPEED
   local position = Vector3.new(0, radius, 0)
   
   local ball = entity[Ball]

   if ball.initialDirection then
      position = Vector3.new(-ballMaxX, radius, 0)
      if ball.initialDirection == "left" then
         speed = speed * -1
         position = Vector3.new(ballMaxX, radius, 0)
      end
   else
      if math.random() > 0.5 then
         speed = speed * -1
      end
   end

   entity[Position] = Position(position)
   entity[Velocity] = Velocity(Vector3.new(speed, 0, 0))

   -- sound effect
   self._world:Entity(
      Position(entity[Position].value),
      AudioSource({ clip = "rbxassetid://1837831535" })
   )
end

function BallSystem:OnRemove(Time, entity)
   local part = entity[BasePart].value
   part.Parent = nil
   entity[BasePart] = nil
end

return BallSystem
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af00020f89</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBXAEB133864EF84D24A815A37F3522F9D8">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">RenderSystem</string>
						<string name="ScriptGuid">{B233C6E5-CCF2-40CD-BBBF-D2D51360A2CF}</string>
						<ProtectedString name="Source"><![CDATA[local ECS = _G.ECS

local Client = script.Parent.Parent
local Components = Client.components
local Position = require(Components.Position)
local BasePart = require(Components.BasePart)

local RenderSystem = ECS.System("render", 2, ECS.Query.All(Position, BasePart))

function RenderSystem:Update(Time)
   self:Result():ForEach(function(entity)
      local position = entity[Position]
      local part = entity[BasePart].value
   
      if position.valueOld then
         part.Position = position.valueOld:Lerp(position.value, Time.Interpolation)
      else
         part.Position = position.value
      end
   end)
end

return RenderSystem
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af004bf7ed</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBXCA90B4828D214730A6AF3792FBE6B274">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">MoveSystem</string>
						<string name="ScriptGuid">{636336A1-7EF8-466C-92B0-AA4F4DEDC877}</string>
						<ProtectedString name="Source"><![CDATA[local ECS = _G.ECS

local Client = script.Parent.Parent
local Components = Client.components
local Velocity = require(Components.Velocity)
local Position = require(Components.Position)

local MoveSystem = ECS.System("process", 10, ECS.Query.All(Position, Velocity))

function MoveSystem:Update(Time)
   self:Result(self.queryBalls):ForEach(function(entity)
      local position = entity[Position]
      local velocity = entity[Velocity]
   
      -- position.valueOld = position.value
      position.value = position.value + velocity.value * Time.DeltaFixed
   end)
end

return MoveSystem
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af004bf7ef</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBXACB3F37D2F8A4220B62FF7ACF74552AC">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">PlayerAiThinkSystem</string>
						<string name="ScriptGuid">{69DFADC4-95AD-4491-B9D0-3F56B7267695}</string>
						<ProtectedString name="Source"><![CDATA[local ECS = _G.ECS

local Client = script.Parent.Parent

local Utility = require(Client.Utility)
local Constants = require(Client.Constants)

local Components = Client.components
local Ball = require(Components.Ball)
local Paddle = require(Components.Paddle)
local Position = require(Components.Position)
local Velocity = require(Components.Velocity)
local Player = require(Components.Player)
local PlayerAI = Player.Qualifier("AI")
local PlayerHuman = Player.Qualifier("Human")

local ballMaxZ = Constants.COURT_HEIGHT/2 - Constants.BALL_RADIUS

local PlayerAiThinkSystem = ECS.System("process", 1, ECS.Query.All(PlayerAI, Paddle, Position))

function PlayerAiThinkSystem:Initialize(Time)
   self.queryHuman = ECS.Query.All(PlayerHuman, Paddle, Position).Build()
   self.queryBalls = ECS.Query.All(Ball, Position, Velocity).Build()
end

function PlayerAiThinkSystem:Update(Time)

   local ettPaddleAI = self:Result():FindAny()
   local paddle = ettPaddleAI[Paddle]
   local paddlePos = ettPaddleAI[Position].value

   -- Get the ball that is coming towards the AI and is closer
   local tgBallPos

   self:Result(self.queryBalls):ForEach(function(ettBall)
      local ballPos = ettBall[Position].value
      local ballVel = ettBall[Velocity].value
      
      local ballTowardsAI
      if paddle.side == "right" then
         ballTowardsAI = ballVel.X > 0
      else
         ballTowardsAI = ballVel.X < 0
      end
   
      if ballTowardsAI then
         if tgBallPos == nil then
            tgBallPos = ballPos
         else
            -- o alvo é a bola que está mais proxima da raquete
            if paddle.side == "right" then
               if ballPos.X > tgBallPos.X then
                  tgBallPos = ballPos
               end
            else
               if ballPos.X < tgBallPos.X then
                  tgBallPos = ballPos
               end
            end
         end
      end
   end)

   if tgBallPos then
      paddle.target = Utility.map(tgBallPos.Z, -ballMaxZ, ballMaxZ, -1, 1)
   end
end

return PlayerAiThinkSystem
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0241ee8883f291ef0181ac6c00b861f3</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX19870299A5F743D388A563983C7FEE80">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">PlayerHumanInputSystem</string>
						<string name="ScriptGuid">{9422572F-580D-465B-B4AC-A422E0CA0AC7}</string>
						<ProtectedString name="Source"><![CDATA[local ECS = _G.ECS

local UserInputService = game:GetService("UserInputService")
local CurrentCamera = game.workspace.CurrentCamera

local Client = script.Parent.Parent
local Utility = require(Client.Utility)

local Components = Client.components
local Paddle = require(Components.Paddle)
local Player = require(Components.Player)
local PlayerHuman = Player.Qualifier("Human")

local PlayerHumanInputSystem = ECS.System("process", 1, ECS.Query.All(PlayerHuman, Paddle))

function PlayerHumanInputSystem:Initialize()
   UserInputService.MouseIconEnabled = false
end

function PlayerHumanInputSystem:Update(Time)
   local screenSizeY = CurrentCamera.ViewportSize.Y
   local mousePosY = UserInputService:GetMouseLocation().Y

   local min = screenSizeY*0.2
   local max = screenSizeY*0.8

   mousePosY = math.max(math.min(mousePosY, max), min)

   local entity = self:Result():FindAny()
   local paddle = entity[Paddle]

   paddle.target = Utility.map(mousePosY, min, max, -1, 1)
end

return PlayerHumanInputSystem
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0241ee8883f291ef0181ac6c00b9a278</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBXA75722F6BCC04B5097250033E28D735D">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">PaddleHitSystem</string>
						<string name="ScriptGuid">{866E63DF-FD3E-4F66-B58A-A6AE8447898B}</string>
						<ProtectedString name="Source"><![CDATA[local ECS = _G.ECS

local Client = script.Parent.Parent
local Utility = require(Client.Utility)
local Constants = require(Client.Constants)

local Components = Client.components
local Ball = require(Components.Ball)
local Paddle = require(Components.Paddle)
local Position = require(Components.Position)
local Velocity = require(Components.Velocity)
local AudioSource = require(Components.AudioSource)

local PADDLE_AIM_C = 1.5

-- compute outgoing angle depending on which point the ball hits the paddle
local function computeBounce(ettBall, ettPaddle)
   
   local ball = ettBall[Ball]
   local ballPos = ettBall[Position].value
   local ballVel = ettBall[Velocity].value
   local paddle = ettPaddle[Paddle]
   local paddlePos = ettPaddle[Position].value

   -- The sharpness of the angle is determined by where the ball hits the paddle
   local angle = PADDLE_AIM_C * (ballPos.Z - paddlePos.Z)/Constants.PADDLE_HEIGHT

   local spped = ball.secondary and Constants.BALL_SPEED_SECONDARY or Constants.BALL_SPEED

   local ballVelZ = math.sin(angle) * spped
   local ballVelX = math.cos(angle) * spped
   
   -- if the angle exceeds a magic value, the ball gets an extra speed boost
   local angleAbs = math.abs(angle)
   if (angleAbs > 0.6) then
      local boost = (1 + angleAbs * Constants.BALL_BOOST)
      ballVelX = ballVelX * boost
      ballVelZ = ballVelZ * boost
   end

   -- Determine the direction in which the ball should go
   if paddle.side == "right" then
      ballVelX = ballVelX*-1
   end
   ettBall[Velocity].value = Vector3.new(ballVelX, 0, ballVelZ)
end

local function intersects(ettBall, ettPaddle)

   local ball = ettBall[Ball]
   local ballPos = ettBall[Position].value
   local paddlePos = ettPaddle[Position].value
   
   -- circle
   local cx, cz, radius = ballPos.X, ballPos.Z, Constants.BALL_RADIUS
   -- rectangle
   local rw, rh = Constants.PADDLE_WIDTH, Constants.PADDLE_HEIGHT
   local rx, rz = paddlePos.X - rw/2, paddlePos.Z - rh/2
   
   -- temporary variables to set edges for testing
   local testX = cx
   local testZ = cz
   
   local xEdge, zEdge
   -- which edge is closest?
   if cx < rx then
      testX = rx 
      xEdge = "left"
   elseif cx > rx + rw then    
      testX = rx+rw
      xEdge = "right"
   end 

   if cz < rz then
      testZ = rz
      zEdge = "top"
   elseif cz > rz+rh then    
      testZ = rz+rh
      zEdge = "bottom"
   end 

   -- get distance from closest edges

   local distX = cx-testX
   local distY = cz-testZ   
   local distance = math.sqrt( (distX*distX) + (distY*distY) );
 
   -- if the distance is less than the radius, collision!
   if (distance <= radius) then
      local normal 
      if distY < distX then
         normal = (zEdge == "top") and Vector3.new(0, 0, 1) or Vector3.new(0, 0, -1)
      else
         normal = (xEdge == "left") and Vector3.new(1, 0, 0) or Vector3.new(-1, 0, 0)
      end
      return {
         normal = normal,
         distance = distance
      }
   end
   return nil   
end

local PaddleHitSystem = ECS.System("transform", 2, ECS.Query.All(Paddle, Position))

function PaddleHitSystem:Initialize(Time)
   self.queryBalls = ECS.Query.All(Ball, Position).Build()
end

function PaddleHitSystem:Update(Time)
   local ettsBall = self:Result(self.queryBalls):ToArray()

   local ballSpawned = false

   self:Result():ForEach(function(ettPaddle)
      local paddle = ettPaddle[Paddle]
      local pPosition = ettPaddle[Position]
   
      -- collision detection
      for i,ettBall in ipairs(ettsBall) do
         local collistion = intersects(ettBall, ettPaddle)
         if collistion then
   
            -- move the ball out of the paddle
            local ballPos = ettBall[Position].value
            ettBall[Position].value = ballPos - collistion.normal * collistion.distance
           
            computeBounce(ettBall, ettPaddle)

            if #ettsBall < 2 then               
               paddle.hits = paddle.hits + 1
               if paddle.hits == 5 then
                  -- create new ball
                  local inverseDirection = (paddle.side == "left") and "right" or "left" 
                  self._world:Entity(Ball({ initialDirection = inverseDirection, secondary = true }))
                  ballSpawned = true
               end
            end

            -- sound effect
            self._world:Entity(
               Position(ballPos),
               AudioSource({ clip = "rbxassetid://4458219865" })
            )

            -- break
            return true
         end
      end
   end)

   if ballSpawned then
      self:Result():ForEach(function(ettPaddle)
         local paddle = ettPaddle[Paddle]
         paddle.hits = 0
      end)
   end
end

return PaddleHitSystem
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0241ee8883f291ef0181ac6c00bec1b2</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX02D9DE3A5DAA4DBEA8676F32F7BB5423">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ScoreSystem</string>
						<string name="ScriptGuid">{2D906FD8-0371-482B-AEE6-C5E1345EC563}</string>
						<ProtectedString name="Source"><![CDATA[local ECS = _G.ECS

local Client = script.Parent.Parent
local Constants = require(Client.Constants)

local Components = Client.components
local Ball = require(Components.Ball)
local Paddle = require(Components.Paddle)
local Score = require(Components.Score)
local Player = require(Components.Player)
local Position = require(Components.Position)
local Velocity = require(Components.Velocity)
local BasePart = require(Components.BasePart)
local AudioSource = require(Components.AudioSource)

local ballMaxX = Constants.COURT_WIDTH/2
local ballMaxZ = Constants.COURT_HEIGHT/2 - Constants.BALL_RADIUS

local ScoreSystem = ECS.System("transform", 2, ECS.Query.All(Score, Paddle))

function ScoreSystem:Initialize(Time)
   self.queryBalls = ECS.Query.All(Ball, Position).Build()
end

function ScoreSystem:Update(Time)
   local ettScored = false
   local scoredSide

   local balls = self:Result(self.queryBalls):ToArray()

   self:Result():ForEach(function(entity)
      local paddle = entity[Paddle]
      local score = entity[Score]

      for i,ettBall in ipairs(balls) do         
         local ball = ettBall[Ball]
         local ballPos = ettBall[Position].value
      
         -- if ball hits horizontal wall, reset the game      
         if (paddle.side == "right" and ballPos.X < -ballMaxX) then
            ettScored = entity
         elseif (paddle.side == "left" and ballPos.X > ballMaxX ) then
            ettScored = entity
         end
   
         if ettScored then
            score.value = score.value + 1
            score.TextLabel.Text = tostring(score.value)

            -- sound effect
            self._world:Entity(
               Position(ballPos),
               AudioSource({ clip = "rbxassetid://1843023345" })
            )
   
            -- break
            return true
         end
      end
   end)

   if ettScored then
      -- remove all balls
      for i,ettBall in ipairs(balls) do
         self._world:Remove(ettBall)
      end

      -- create new ball
      self._world:Entity(Ball())

      self:Result(self.queryPlayers):ForEach(function(entity)
         local paddle = entity[Paddle]
         paddle.hits = 0
      end)
   end
end

function ScoreSystem:OnEnter(Time, entity)
   local score = entity[Score]
   local paddle = entity[Paddle]
   score.goalPart = game.Workspace:FindFirstChild("goal_"..paddle.side)
   score.TextLabel = score.goalPart.BillboardGui.TextLabel   
end

return ScoreSystem
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0241ee8883f291ef0181ac6c00daebbb</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX3045956FD6E04920AA9C021822B18402">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">AudioSystem</string>
						<string name="ScriptGuid">{A78EFF7B-3F47-4101-831B-675BD9A94285}</string>
						<ProtectedString name="Source"><![CDATA[local ECS = _G.ECS

local Client = script.Parent.Parent
local Constants = require(Client.Constants)

local Components = Client.components
local BasePart = require(Components.BasePart)
local Position = require(Components.Position)
local AudioSource = require(Components.AudioSource)

local ballMaxX = Constants.COURT_WIDTH/2
local ballMaxZ = Constants.COURT_HEIGHT/2 - Constants.BALL_RADIUS

local AudioSystem = ECS.System("transform", 100, ECS.Query.All(AudioSource))

function AudioSystem:Initialize(Time)
   self.queryStopped = ECS.Query.All(AudioSource, AudioSource.In("Stopped")).Build()
end

function AudioSystem:Update(Time)
   self:Result(self.queryStopped):ForEach(function(entity)
      self._world:Remove(entity)
   end)
end

function AudioSystem:OnEnter(Time, entity)
   local source = entity[AudioSource]
   local position = entity[Position]
   
   -- create a sound
   local sound = Instance.new("Sound")
   sound.SoundId = source.clip
   sound.Looped = source.loop
   source.sound = sound

   if position then
      -- create a part
      local part = Instance.new("Part")
      part.Anchored = true
      part.CanCollide = false
      part.Transparency = 1
      part.Position = position.value
      part.Name = "sound#"..source.clip

      sound.Parent = part
      part.Parent = game.Workspace
      entity[BasePart] = BasePart(part)
   end

   sound.Ended:Connect(function()
      source:SetState("Stopped")
   end)

   source:SetState("Playing")
end

function AudioSystem:OnExit(Time, entity)
   local part = entity[BasePart]
   if part then
      part.value.Parent = nil
   end
end

function AudioSystem:OnRemove(Time, entity)
   local part = entity[BasePart]
   if part then
      part.value.Parent = nil
   end
end

return AudioSystem
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0241ee8883f291ef0181ac6c00e676fb</UniqueId>
					</Properties>
				</Item>
			</Item>
			<Item class="LocalScript" referent="RBX2F24BC263FA9489692B5EB8A9B40DA13">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Main</string>
					<string name="ScriptGuid">{2ACF1CF4-EF68-499C-AE31-8AD922804366}</string>
					<ProtectedString name="Source"><![CDATA[
local ECS = require(game.ReplicatedStorage:WaitForChild("ECS"))

local Constants = require(script.Parent:WaitForChild("Constants"))

local Components = script.Parent:WaitForChild("components")
local Ball = require(Components.Ball)
local Score = require(Components.Score)
local Paddle = require(Components.Paddle)
local Player = require(Components.Player)
local PlayerAI = Player.Qualifier("AI")
local PlayerHuman = Player.Qualifier("Human")

local Systems = script.Parent.systems
local MoveSystem = require(Systems.MoveSystem)
local BallSystem = require(Systems.BallSystem)
local AudioSystem = require(Systems.AudioSystem)
local ScoreSystem = require(Systems.ScoreSystem)
local PaddleSystem = require(Systems.PaddleSystem)
local PaddleHitSystem = require(Systems.PaddleHitSystem)
local PlayerAiThinkSystem = require(Systems.PlayerAiThinkSystem)
local PlayerHumanInputSystem = require(Systems.PlayerHumanInputSystem)

local RenderSystem = require(Systems.RenderSystem)
local CameraSystem = require(Systems.CameraSystem)

local world = ECS.World({
   MoveSystem,
   BallSystem,
   AudioSystem,
   ScoreSystem, 
   PaddleSystem, 
   PaddleHitSystem, 
   PlayerAiThinkSystem,
   PlayerHumanInputSystem,
   CameraSystem,
   RenderSystem,
}, 60)

-- Ball
world:Entity(Ball())

-- Player
world:Entity(
   Score(),
   PlayerHuman(),
   Paddle({ side = "left" })
)

-- AI
world:Entity(
   Score(),
   PlayerAI(),
   Paddle({ side = "right" })
)
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af00020f8b</UniqueId>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBXE15FB49653D349C192049CCEA6CCBCDB">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Constants</string>
					<string name="ScriptGuid">{04D89E38-9D37-4F2F-8910-F2E140D26783}</string>
					<ProtectedString name="Source"><![CDATA[
local BALL_SPEED = 50

local constants = {
   BALL_BOOST = 0.3,
   BALL_RADIUS = 1,
   BALL_SPEED = BALL_SPEED,
   BALL_SERVE_SPEED = BALL_SPEED*0.7,
   BALL_SPEED_SECONDARY = BALL_SPEED*0.5,
   COURT_WIDTH = 72,
   COURT_HEIGHT = 30,
   PADDLE_WIDTH = 1,
   PADDLE_HEIGHT = 10,
   PLAYER_SPEED = 5,
   CAMERA_DISTANCE = 30
}

return constants
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af00020f8d</UniqueId>
				</Properties>
			</Item>
			<Item class="Folder" referent="RBX1915FDCA75BE4BC98C50A9B64179D939">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<string name="Name">components</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af00020f8f</UniqueId>
				</Properties>
				<Item class="ModuleScript" referent="RBX731666BE9B8E4151B6E8AB9201907441">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Paddle</string>
						<string name="ScriptGuid">{DB5C058C-4CD6-47E1-9B65-9238527C3456}</string>
						<ProtectedString name="Source"><![CDATA[local Paddle = _G.ECS.Component({
   side = "left",
   hits = 0,
   target = 0,    -- -1 = bottom, 0 = middle, 1 = top
   position = 0   -- -1 = bottom, 0 = middle, 1 = top
})

return Paddle
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af00020f90</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX4D2BCEF9CC584FDD9C73F06E1F2C3C0C">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Player</string>
						<string name="ScriptGuid">{9628A125-E3F1-4B5A-88B3-651243F4A1D7}</string>
						<ProtectedString name="Source"><![CDATA[
local Player = _G.ECS.Component()
local PlayerAI = Player.Qualifier("AI")
local PlayerHuman = Player.Qualifier("Human")

return Player
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af00020f91</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBXC14B2FBDD71E405F9FC1D4A346B275F9">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Ball</string>
						<string name="ScriptGuid">{C3E028B4-B3ED-4CA4-B0CF-3627BF8A161E}</string>
						<ProtectedString name="Source"><![CDATA[
local Ball = _G.ECS.Component({
   secondary = false,
   initialDirection = nil,
})

return Ball
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af00020f92</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX0D2AD1B143A74C48A3D895201E886A5D">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Position</string>
						<string name="ScriptGuid">{D1094A76-FF25-4254-AFF9-1BFDB04A9B53}</string>
						<ProtectedString name="Source"><![CDATA[
local Position = _G.ECS.Component(Vector3.new(0, 0, 0))

return Position
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af0049760e</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBXAD2CBAB299A7409B8E70C46C3620EA60">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Velocity</string>
						<string name="ScriptGuid">{C97B20B5-D53E-4CAF-B3ED-563B8C17198F}</string>
						<ProtectedString name="Source"><![CDATA[
local Velocity = _G.ECS.Component(Vector3.new(0, 0, 0))

return Velocity
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af00497610</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBXFAA2925496C74274BC7C69894EB769F5">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">BasePart</string>
						<string name="ScriptGuid">{CD22ED03-3A99-400E-BC06-5E293A575342}</string>
						<ProtectedString name="Source"><![CDATA[
local BasePart = _G.ECS.Component()

return BasePart
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af004bf7ee</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX94C97536316E4DBCA2E597A6D5A128FE">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Score</string>
						<string name="ScriptGuid">{87C823D7-7403-4393-BD3C-70DBC899E138}</string>
						<ProtectedString name="Source"><![CDATA[
local Score = _G.ECS.Component(0)

return Score
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0241ee8883f291ef0181ac6c00dae7b8</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX99A2DDB591AA42CEAF5455B784767761">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">AudioSource</string>
						<string name="ScriptGuid">{3E5DF6F2-A6F1-452B-8EE0-B53709BB312E}</string>
						<ProtectedString name="Source"><![CDATA[
local AudioSource = _G.ECS.Component({
   clip = "",     -- sound asset
   volume = 10,    -- playback volume between [0..10]
   loop = false,  -- If true, the audio clip replays when it ends
   sound = nil
})

AudioSource.States = {
   ["Playing"] = { "Stopped" },
   ["Stopped"] = { "Playing" }
}

AudioSource.StateInitial = "Stopped"

AudioSource.Case = {
   Playing = function(self, previous)
      if self.sound then
         self.sound:Play()
      end
   end,
   Stopped = function(self, previous)
      if self.sound then
         self.sound:Stop()
      end
   end
}

return AudioSource
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0241ee8883f291ef0181ac6c00e676fd</UniqueId>
					</Properties>
				</Item>
			</Item>
			<Item class="ModuleScript" referent="RBX481677E10F164DB08347112CF7900195">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Utility</string>
					<string name="ScriptGuid">{37D1623F-A591-4656-A23A-20C1ADD07B85}</string>
					<ProtectedString name="Source"><![CDATA[
local Utility = {}

function Utility.map(x, inMin, inMax, outMin, outMax)
   return (x - inMin)*(outMax - outMin)/(inMax - inMin) + outMin
end

function Utility.lerp(v0, v1, t)
   return (1-t)*v0 + t*v1
end

return Utility
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af00020f94</UniqueId>
				</Properties>
			</Item>
		</Item>
		<Item class="StarterCharacterScripts" referent="RBXFB5BB556864841E69B4510E6CDB76A78">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<string name="Name">StarterCharacterScripts</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af00018526</UniqueId>
			</Properties>
		</Item>
	</Item>
	<Item class="StarterPack" referent="RBX2F6E2C871064497ABEDF80026EC0DDD0">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">StarterPack</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af000182ab</UniqueId>
		</Properties>
	</Item>
	<Item class="StarterGui" referent="RBX5C4494074CD3423BACCDAB725D121272">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">StarterGui</string>
			<bool name="ResetPlayerGuiOnSpawn">true</bool>
			<token name="ScreenOrientation">4</token>
			<bool name="ShowDevelopmentGui">true</bool>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af000182ac</UniqueId>
			<token name="VirtualCursorMode">0</token>
		</Properties>
	</Item>
	<Item class="LocalizationService" referent="RBX3EA7D398E29D4EE3BAF9688D05509DEF">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">LocalizationService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af000182ae</UniqueId>
		</Properties>
	</Item>
	<Item class="TeleportService" referent="RBX2DDBCA1C4CF94BFD8F4D6C49C997B7EA">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">Teleport Service</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af000182b2</UniqueId>
		</Properties>
	</Item>
	<Item class="CollectionService" referent="RBX84D2FD6CCB834733987D39D709A0327C">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">CollectionService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af000182b4</UniqueId>
		</Properties>
	</Item>
	<Item class="PhysicsService" referent="RBXBE1CA6E10B1A4C0A9140AC1D0B6DE8DC">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">PhysicsService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af000182b5</UniqueId>
		</Properties>
	</Item>
	<Item class="Geometry" referent="RBX2E5AAF76D7814C81A3ED1A0B272FD36A">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">Geometry</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af000182b7</UniqueId>
		</Properties>
	</Item>
	<Item class="InsertService" referent="RBX95DFEA2335CF4693A09EFA1482FAB261">
		<Properties>
			<bool name="AllowClientInsertModels">false</bool>
			<bool name="AllowInsertFreeModels">false</bool>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">InsertService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af000182b9</UniqueId>
		</Properties>
		<Item class="StringValue" referent="RBX064CBCC40B2C448CB2DE31E3DBD2F222">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<string name="Name">InsertionHash</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af00018528</UniqueId>
				<string name="Value">{C3FFDE2F-3CE5-41A4-B5E5-08BC30C81031}</string>
			</Properties>
		</Item>
	</Item>
	<Item class="GamePassService" referent="RBX919E7E57FE0C4C0F9B26D7A6F21F7DA2">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">GamePassService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af000182ba</UniqueId>
		</Properties>
	</Item>
	<Item class="Debris" referent="RBXEE948B8CD3124B809B27B4D656929BDC">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<int name="MaxItems">1000</int>
			<string name="Name">Debris</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af000182bb</UniqueId>
		</Properties>
	</Item>
	<Item class="CookiesService" referent="RBXA8B5F6EECD94433087BD9BDF22983214">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">CookiesService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af000182bc</UniqueId>
		</Properties>
	</Item>
	<Item class="VRService" referent="RBXB5D786935BCC4FD084A53E05CDDF56A2">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">VRService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af000182c6</UniqueId>
		</Properties>
	</Item>
	<Item class="ContextActionService" referent="RBXD8918D179FF347A1B31427F7F2E88953">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">ContextActionService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af000182c7</UniqueId>
		</Properties>
	</Item>
	<Item class="ScriptService" referent="RBX2D39E24DB290430A964B2543E0C0E0F0">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">Instance</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af000182c9</UniqueId>
		</Properties>
	</Item>
	<Item class="AssetService" referent="RBXE6B97E98BA1545DB99E0FAF353EA8039">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">AssetService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af000182ca</UniqueId>
		</Properties>
	</Item>
	<Item class="TouchInputService" referent="RBXBFAC66F8E5A4452DAD88376C31FD2EFC">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">TouchInputService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af000182cb</UniqueId>
		</Properties>
	</Item>
	<Item class="AnalyticsService" referent="RBXC46723EFC7064E3ABBFEB096801FFE29">
		<Properties>
			<string name="ApiKey"></string>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">AnalyticsService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af000182ce</UniqueId>
		</Properties>
	</Item>
	<Item class="Selection" referent="RBX1606BB0FC5614C69A4FFEB0888FC08DF">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">Selection</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af000182d1</UniqueId>
		</Properties>
	</Item>
	<Item class="ServerScriptService" referent="RBX53A646F0F8C241038B366A5820BFD969">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="LoadStringEnabled">false</bool>
			<string name="Name">ServerScriptService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af000182da</UniqueId>
		</Properties>
		<Item class="Script" referent="RBX453CF3F8A8834BEA8C7D21CF8511A59B">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Main</string>
				<string name="ScriptGuid">{370D60B7-C5E9-4154-9170-329D73840A64}</string>
				<ProtectedString name="Source"><![CDATA[game.Players.CharacterAutoLoads = false
]]></ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af00020f95</UniqueId>
			</Properties>
		</Item>
	</Item>
	<Item class="ServerStorage" referent="RBX9B9A08C21D2941CD99AEEA06B3906461">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">ServerStorage</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af000182db</UniqueId>
		</Properties>
	</Item>
	<Item class="ReplicatedStorage" referent="RBXCF222E0A0202403BB4355E0C5140D429">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">ReplicatedStorage</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af000182dc</UniqueId>
		</Properties>
		<Item class="ModuleScript" referent="RBX4330246125AE44CBBE0642184558BED9">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">ECS</string>
				<string name="ScriptGuid">{DB0B7A5D-F8B8-4482-A6C9-2A8342B54807}</string>
				<ProtectedString name="Source"><![CDATA[--[[
	ECS Lua v2.2.0

	ECS Lua is a fast and easy to use ECS (Entity Component System) engine for game development.

	This is a minified version of ECS Lua, to see the full source code visit
	https://github.com/nidorx/ecs-lua

   Discussions about this script are at https://devforum.roblox.com/t/841175

	------------------------------------------------------------------------------

	MIT License

	Copyright (c) 2021 Alex Rodin

	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:

	The above copyright notice and this permission notice shall be included in all
	copies or substantial portions of the Software.

	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
	SOFTWARE.
]]
local a,b={},{}local function c(d)if(not a[d])then a[d]={r=b[d]()}end return a[d].r end b["Archetype"]=function()local d={}local e={}local f={}local g=0 local h={}h.__index=h function h.Of(i)local j={}local k={}for m,n in ipairs(i)do if(n.IsCType and not n.isComponent)then if n.IsQualifier then if k[n]==nil then k[n]=true table.insert(j,n.Id)end n=n.SuperClass end if k[n]==nil then k[n]=true table.insert(j,n.Id)end end end table.sort(j)local l="_"..table.concat(j,"_")if d[l]==nil then d[l]=setmetatable({id=l,_components=k},h)g=g+1 end return d[l]end function h.Version()return g end function h:Has(i)return(self._components[i]==true)end function h:With(i)if self._components[i]==true then return self end local j=e[self]if not j then j={}e[self]=j end local k=j[i]if k==nil then local l={i}for m,n in pairs(self._components)do table.insert(l,m)end k=h.Of(l)j[i]=k end return k end function h:WithAll(i)local j={}for k,l in pairs(self._components)do table.insert(j,k)end for k,l in ipairs(i)do if self._components[l]==nil then table.insert(j,l)end end return h.Of(j)end function h:Without(i)if self._components[i]==nil then return self end local j=f[self]if not j then j={}f[self]=j end local k=j[i]if k==nil then local l={}for m,n in pairs(self._components)do if m~=i then table.insert(l,m)end end k=h.Of(l)j[i]=k end return k end function h:WithoutAll(i)local j={}for l,m in ipairs(i)do j[m]=true end local k={}for l,m in pairs(self._components)do if j[l]==nil then table.insert(k,l)end end return h.Of(k)end h.EMPTY=h.Of({})return h end b["Component"]=function()local d=c("Utility")local e=c("ComponentFSM")local f=d.copyDeep local g=d.mergeDeep local h=0 local function i(l,m)h=h+1 local n={Id=h,IsCType=true,SuperClass=m}n.__index=n if m==nil then m=n m._Qualifiers={["Primary"]=n}m._QualifiersArr={n}m._Initializers={}else m.HasQualifier=true n.IsQualifier=true n.HasQualifier=true end local o=m._Qualifiers local p=m._QualifiersArr setmetatable(n,{__call=function(q,r)return n.New(r)end,__index=function(q,r)if(r=="States")then return m.__States end if(r=="Case"or r=="StateInitial")then return rawget(m,r)end end,__newindex=function(q,r,s)if(r=="Case"or r=="States"or r=="StateInitial")then if n==m then if(r=="States")then if not m.IsFSM then e.AddCapability(m,s)for t,u in pairs(o)do if u~=m then e.AddMethods(m,u)end end end else rawset(q,r,s)end end else rawset(q,r,s)end end})if m.IsFSM then e.AddMethods(m,n)end function n.Qualifier(q)if type(q)~="string"then for s,t in ipairs(p)do if t==q then return q end end return nil end local r=o[q]if r==nil then r=i(l,m)o[q]=r table.insert(p,r)end return r end function n.Qualifiers(...)local q={...}if#q==0 then return p else local r={}local s={}for t,u in ipairs({...})do local v=n.Qualifier(u)if v and s[v]==nil then s[v]=true table.insert(r,v)end end return r end end function n.New(q)if(q~=nil and type(q)~="table")then q={value=q}end local r=setmetatable(l(q)or{},n)for s,t in ipairs(m._Initializers)do t(r)end r.isComponent=true r._qualifiers={[n]=r}return r end function n:GetType()return n end function n:Is(q)return q==n or q==m end function n:Primary()return self._qualifiers[m]end function n:Qualified(q)return self._qualifiers[n.Qualifier(q)]end function n:QualifiedAll()local q={}for r,s in pairs(o)do q[r]=self._qualifiers[s]end return q end function n:Merge(q)if m.HasQualifier then if self==q then return end if self._qualifiers==q._qualifiers then return end if not q:Is(m)then return end local r=n local s=q:GetType()local t if r==m then t=self._qualifiers elseif s==m then t=q._qualifiers elseif self._qualifiers[m]~=nil then t=self._qualifiers[m]._qualifiers elseif q._qualifiers[m]~=nil then t=q._qualifiers[m]._qualifiers end if t~=nil then if self._qualifiers~=t then for u,v in pairs(self._qualifiers)do if m~=u then t[u]=v v._qualifiers=t end end end if q._qualifiers~=t then for u,v in pairs(q._qualifiers)do if m~=u then t[u]=v v._qualifiers=t end end end else for u,v in pairs(q._qualifiers)do if r~=u then self._qualifiers[u]=v v._qualifiers=self._qualifiers end end end end end function n:Detach()if not m.HasQualifier then return end self._qualifiers[n]=nil self._qualifiers={[n]=self}end return n end local function j(l)return l or{}end local k={}function k.Create(l)local m=j if l~=nil then local n=type(l)if(n=="function")then m=l else if(n~="table")then l={value=l}end m=function(o)local p=f(l)if(o~=nil)then g(p,o)end return p end end end return i(m,nil)end return k end b["ComponentFSM"]=function()local d=c("Query")local e=d.Filter(function(g,h)local i=h.States local j=h.IsSuperClass local k=h.ComponentClass if j then local l=k.Qualifiers()for m,n in ipairs(l)do local o=g[n]if(o~=nil and i[o:GetState()]==true)then return true end end return false else local l=g[k]if l==nil then return false end return i[l:GetState()]==true end end)local f={}function f.AddCapability(g,h)g.IsFSM=true local i=setmetatable({},{__newindex=function(j,k,l)if(type(l)~="table")then l={l}end if table.find(l,"*")then rawset(j,k,"*")else local m=table.find(l,k)if m~=nil then table.remove(l,m)if#l==0 then l="*"end end rawset(j,k,l)end end})rawset(g,"__States",i)for j,k in pairs(h)do if g.StateInitial==nil then g.StateInitial=j end i[j]=k end f.AddMethods(g,g)table.insert(g._Initializers,function(j)j:SetState(g.StateInitial)end)end function f.AddMethods(g,h)h.IsFSM=true local i=g.States function h.In(...)local j={}local k=0 for l,m in ipairs({...})do if(i[m]~=nil and j[m]==nil)then k=k+1 j[m]=true end end if k==0 then return{}end return e({States=j,IsSuperClass=(h==g),ComponentClass=h,})end function h:SetState(j)if(j==nil or i[j]==nil)then return end local k=self:GetState()if(k==j)then return end if(k~=nil)then local m=i[k]if(m~="*"and table.find(m,j)==nil)then return end end self._state=j self._statePrev=k self._stateTime=os.clock()local l=g.Case and g.Case[j]if l then l(self,k)end end function h:GetState()return self._state or g.StateInitial end function h:GetPrevState()return self._statePrev or nil end function h:GetStateTime()return self._stateTime or 0 end end return f end b["ECS"]=function()local d=c("Query")local e=c("World")local f=c("System")local g=c("Archetype")local h=c("Component")local function i(k)e.LoopManager=k end pcall(function()if(game and game.ClassName=="DataModel")then i(c("RobloxLoopManager")())end end)local j={Query=d,World=e.New,System=f.Create,Archetype=g,Component=h.Create,SetLoopManager=i}if _G.ECS==nil then _G.ECS=j else local k=_G.warn or print k("ECS Lua was not registered in the global variables, there is already another object registered.")end return j end b["Entity"]=function()local d=c("Archetype")local e=0 local function f(m,...)local n={...}local o=m._data if(#n==1)then local q=n[1]if(q.IsCType and not q.isComponent)then return o[q]else return nil end end local p={}for q,r in ipairs(n)do if(r.IsCType and not r.isComponent)then table.insert(p,o[r])end end return table.unpack(p)end local function g(m,n,o)local p=m._data local q for r,s in ipairs(o.Qualifiers())do if s~=o then q=p[s]if q then break end end end if q then q:Merge(n)end end local function h(m,...)local n={...}local o=m._data local p=m.archetype local q=p local r={}local s=n[1]if(s and s.IsCType and not s.isComponent)then local t=n[2]local u if t==nil then local v=o[s]if v then v:Detach()end o[s]=nil q=q:Without(s)elseif(type(t)=="table"and t.isComponent)then local v=o[s]if(v~=t)then if v then v:Detach()end s=t:GetType()o[s]=t q=q:With(s)if(s.HasQualifier or s.IsQualifier)then g(m,t,s)end end else local v=o[s]if v then v:Detach()end local w=s(t)o[s]=w q=q:With(s)if(s.HasQualifier or s.IsQualifier)then g(m,w,s)end end else for t,u in ipairs(n)do if(u.isComponent)then local v=u:GetType()local w=o[v]if(w~=u)then if w then w:Detach()end o[v]=u q=q:With(v)if(v.HasQualifier or v.IsQualifier)then g(m,u,v)end end end end end if(p~=q)then m.archetype=q m._onChange:Fire(m,p)end end local function i(m,...)local n=m._data local o=m.archetype local p=o for q,r in ipairs({...})do if r.isComponent then local s=r:GetType()local t=n[s]if t then t:Detach()end n[s]=nil p=p:Without(s)elseif r.IsCType then local s=n[r]if s then s:Detach()end n[r]=nil p=p:Without(r)end end if m.archetype~=p then m.archetype=p m._onChange:Fire(m,o)end end local function j(m,n)local o=m._data local p={}if(n~=nil and n.IsCType and not n.isComponent)then local q=n.Qualifiers()for r,s in ipairs(q)do local t=o[s]if t then table.insert(p,t)end end else for q,r in pairs(o)do table.insert(p,r)end end return p end local function k(m,n)if(n~=nil and n.IsCType and not n.isComponent)then local o=m._data local p=n.Qualifiers()for q,r in ipairs(p)do local s=o[r]if s then return s end end end end local l={__index=function(m,n)if(type(n)=="table")then return f(m,n)end end,__newindex=function(m,n,o)local p=true if(type(n)=="table"and(n.IsCType and not n.isComponent))then h(m,n,o)else rawset(m,n,o)end end}function l.New(m,n)local o=d.EMPTY local p={}if(n~=nil and#n>0)then local q={}for r,s in ipairs(n)do local t=s:GetType()table.insert(q,t)p[t]=s end o=d.Of(q)end e=e+1 return setmetatable({_data=p,_onChange=m,id=e,isAlive=false,archetype=o,Get=f,Set=h,Unset=i,GetAll=j,GetAny=k,},l)end return l end b["EntityRepository"]=function()local d=c("Event")local e={}e.__index=e function e.New()return setmetatable({_archetypes={},_entitiesArchetype={},},e)end function e:Insert(f)if(self._entitiesArchetype[f]==nil)then local g=f.archetype local h=self._archetypes[g]if(h==nil)then h={count=0,entities={}}self._archetypes[g]=h end h.entities[f]=true h.count=h.count+1 self._entitiesArchetype[f]=g else self:Update(f)end end function e:Remove(f)local g=self._entitiesArchetype[f]if g==nil then return end self._entitiesArchetype[f]=nil local h=self._archetypes[g]if(h~=nil and h.entities[f]==true)then h.entities[f]=nil h.count=h.count-1 if(h.count==0)then self._archetypes[g]=nil end end end function e:Update(f)local g=self._entitiesArchetype[f]if(g==nil or g==f.archetype)then return end self:Remove(f)self:Insert(f)end function e:Query(f)local g={}for h,i in pairs(self._archetypes)do if f:Match(h)then table.insert(g,i.entities)end end return f:Result(g),#g>0 end function e:FastCheck(f)for g,h in pairs(self._archetypes)do if f:Match(g)then return true end end return false end return e end b["Event"]=function()local d={}d.__index=d function d.New(f,g)return setmetatable({_event=f,_handler=g},d)end function d:Disconnect()local f=self._event if(f and not f.destroyed)then local g=table.find(f._handlers,self._handler)if g~=nil then table.remove(f._handlers,g)end end setmetatable(self,nil)end local e={}e.__index=e function e.New()return setmetatable({_handlers={}},e)end function e:Connect(f)if(type(f)=="function")then table.insert(self._handlers,f)return d.New(self,f)end error(("Event:Connect(%s)"):format(typeof(f)),2)end function e:Fire(...)if not self.destroyed then for f,g in ipairs(self._handlers)do g(table.unpack({...}))end end end function e:Destroy()setmetatable(self,nil)self._handlers=nil self.destroyed=true end return e end b["Query"]=function()local d=c("QueryResult")local e={}local f={}f.__index=f setmetatable(f,{__call=function(i,j,k,l)return f.New(j,k,l)end,})local function g(i,j,k)local l={}local m={}local n={}for o,p in ipairs(i)do if(l[p]==nil)then if(p.IsCType and not p.isComponent)then l[p]=true table.insert(m,p)table.insert(n,p.Id)else if p.Filter then l[p]=true p[j]=true table.insert(k,p)end end end end if#m>0 then table.sort(n)local o="_"..table.concat(n,"_")return m,o end end function f.New(i,j,k)local l={}local m,n,o if(j~=nil)then j,m=g(j,"IsAnyFilter",l)end if(i~=nil)then i,n=g(i,"IsAllFilter",l)end if(k~=nil)then k,o=g(k,"IsNoneFilter",l)end return setmetatable({isQuery=true,_any=j,_all=i,_none=k,_anyKey=m,_allKey=n,_noneKey=o,_cache={},_clauses=#l>0 and l or nil},f)end function f:Result(i)return d.New(i,self._clauses)end function f:Match(i)local j=self._cache local k=j[i]if k~=nil then return k else local l=e[i]if(l==nil)then l={Any={},All={},None={}}e[i]=l end local m=self._noneKey if m then local p=l.None[m]if(p==nil)then p=true for q,r in ipairs(self._none)do if i:Has(r)then p=false break end end l.None[m]=p end if(p==false)then j[i]=false return false end end local n=self._anyKey if n then local p=l.Any[n]if(p==nil)then p=false if(l.All[n]==true)then p=true else for q,r in ipairs(self._any)do if i:Has(r)then p=true break end end end l.Any[n]=p end if(p==false)then j[i]=false return false end end local o=self._allKey if o then local p=l.All[o]if(p==nil)then local q=true for r,s in ipairs(self._all)do if(not i:Has(s))then q=false break end end if q then p=true else p=false end l.All[o]=p end j[i]=p return p end j[i]=true return true end end local function h()local i={isQueryBuilder=true}local j function i.All(...)j=nil i._all={...}return i end function i.Any(...)j=nil i._any={...}return i end function i.None(...)j=nil i._none={...}return i end function i.Build()if j==nil then j=f.New(i._all,i._any,i._none)end return j end return i end function f.All(...)return h().All(...)end function f.Any(...)return h().Any(...)end function f.None(...)return h().None(...)end function f.Filter(i)return function(j)return{Filter=i,Config=j}end end return f end b["QueryResult"]=function()local function d(l,m,n)return m,(l(m)==true),true end local function e(l,m,n)return l(m),true,true end local function f(l,m,n)local o=(n<=l)return m,o,o end local function g(l,m,n)local o=true for p,q in ipairs(l)do if(q.Filter(m,q.Config)==true)then o=false break end end return m,o,true end local function h(l,m,n)local o=true for p,q in ipairs(l)do if(q.Filter(m,q.Config)==false)then o=false break end end return m,o,true end local function i(l,m,n)local o=false for p,q in ipairs(l)do if(q.Filter(m,q.Config)==true)then o=true break end end return m,o,true end local j={}local k={}k.__index=k function k.New(l,m)local n=j if(m and#m>0)then local o={}local p={}local q={}n={}for r,s in ipairs(m)do if s.IsNoneFilter then table.insert(q,s)elseif s.IsAnyFilter then table.insert(p,s)else table.insert(o,s)end end if(#q>0)then table.insert(n,{g,q})end if(#o>0)then table.insert(n,{h,o})end if(#p>0)then table.insert(n,{i,p})end end return setmetatable({chunks=l,_pipeline=n,},k)end function k:With(l,m)local n={}for o,p in ipairs(self._pipeline)do table.insert(n,p)end table.insert(n,{l,m})return setmetatable({chunks=self.chunks,_pipeline=n,},k)end function k:Filter(l)return self:With(d,l)end function k:Map(l)return self:With(e,l)end function k:Limit(l)return self:With(f,l)end function k:AnyMatch(l)local m=false self:ForEach(function(n)if l(n)then m=true end return m end)return m end function k:AllMatch(l)local m=true self:ForEach(function(n)if(not l(n))then m=false end return m==false end)return m end function k:FindAny()local l self:ForEach(function(m)l=m return true end)return l end function k:ToArray()local l={}self:ForEach(function(m)table.insert(l,m)end)return l end function k:Iterator()local l=coroutine.create(function()self:ForEach(function(m,n)coroutine.yield(m,n)end)end)return function()local m,n,o=coroutine.resume(l)return o,n end end function k:ForEach(l)local m=1 local n=self._pipeline local o=#n>0 if(not o)then for p,q in ipairs(self.chunks)do for r,s in pairs(q)do if(l(r,m)==true)then return end m=m+1 end end else for p,q in ipairs(self.chunks)do for r,s in pairs(q)do local t=false local u=true local v=r if(u and o)then for w,x in ipairs(n)do local y,z,A=x[1](x[2],v,m)if(not A)then t=true end if z then v=y else u=false break end end end if u then if(l(v,m)==true)then return end m=m+1 end if t then return end end end end end return k end b["RobloxLoopManager"]=function()local function d()local e=game:GetService("RunService")return{Register=function(f)local g=e.Stepped:Connect(function()f:Update("process",os.clock())end)local h=e.Heartbeat:Connect(function()f:Update("transform",os.clock())end)local i if(not e:IsServer())then i=e.RenderStepped:Connect(function()f:Update("render",os.clock())end)end return function()g:Disconnect()h:Disconnect()if i then i:Disconnect()end end end}end return d end b["System"]=function()local d={"task","render","process","transform"}local e={}function e.Create(f,g,h,i)if(f==nil or not table.find(d,f))then error("The step parameter must one of ",table.concat(d,", "))end if(g and type(g)=="function")then i=g g=nil elseif h and type(h)=="function"then i=h h=nil end if(g and type(g)=="table"and(g.isQuery or g.isQueryBuilder))then h=g g=nil end if(g==nil or g<0)then g=50 end if type(h)=="function"then i=h h=nil end if(h and h.isQueryBuilder)then h=h.Build()end local j={Step=f,Order=g,Query=h,}j.__index=j function j.New(k,l)local m=setmetatable({version=0,_world=k,_config=l,},j)if m.Initialize then m:Initialize(l)end return m end function j:GetType()return j end function j:Result(k)return self._world:Exec(k or j.Query)end function j:Publish(k,l)end function j:Receive(k)end function j:Destroy()if self.OnDestroy then self.OnDestroy()end setmetatable(self,nil)for k,l in pairs(self)do self[k]=nil end end if i and type(i)=="function"then j.Update=i end return j end return e end b["SystemExecutor"]=function()local function d(i)local j={}local k={}for l,m in ipairs(i)do local n=m:GetType()if(m._TaskState==nil)then m._TaskState="suspended"end if not k[n]then local o={Type=n,System=m,Depends={}}k[n]=o table.insert(j,o)end end for l,m in ipairs(j)do local n=m.Type.Before if(n~=nil and#n>0)then for p,q in ipairs(n)do local r=k[q]if r then r.Depends[m]=true end end end local o=m.Type.After if(o~=nil and#o>0)then for p,q in ipairs(o)do local r=k[q]if r then m.Depends[r]=true end end end end return j end local function e(i,j)return i.Order<j.Order end local f={}f.__index=f function f.New(i)local j=setmetatable({_world=i,_onExit={},_onEnter={},_onRemove={},_task={},_render={},_process={},_transform={},_schedulers={},_lastFrameMatchQueries={},_currentFrameMatchQueries={},},f)i:OnQueryMatch(function(k)j._currentFrameMatchQueries[k]=true end)return j end function f:SetSystems(i)local j={}local k={}local l={}local m={}local n={}local o={}local p={}for q,r in pairs(i)do local s=r.Step if r.Update then if s=="task"then table.insert(m,r)elseif s=="process"then table.insert(o,r)elseif s=="transform"then table.insert(p,r)elseif s=="render"then table.insert(n,r)end end if(r.Query and r.Query.isQuery and s~="task")then if r.OnExit then table.insert(j,r)end if r.OnEnter then table.insert(k,r)end if r.OnRemove then table.insert(l,r)end end end m=d(m)table.sort(j,e)table.sort(k,e)table.sort(l,e)table.sort(n,e)table.sort(o,e)table.sort(p,e)self._onExit=j self._onEnter=k self._onRemove=l self._task=m self._render=n self._process=o self._transform=p end function f:ExecOnExitEnter(i,j)local k=true local l={}for m,n in pairs(j)do local o=l[n]if not o then o={}l[n]=o end local p=m.archetype local q=o[p]if not q then q={}o[p]=q end table.insert(q,m)k=false end if k then return end self:_ExecOnEnter(i,l)self:_ExecOnExit(i,l)end function f:_ExecOnEnter(i,j)local k=self._world for l,m in ipairs(self._onEnter)do local n=m.Query for o,p in pairs(j)do if not n:Match(o)then for q,r in pairs(p)do if n:Match(q)then for s,t in ipairs(r)do k.version=k.version+1 m:OnEnter(i,t)m.version=k.version end end end end end end end function f:_ExecOnExit(i,j)local k=self._world for l,m in ipairs(self._onExit)do local n=m.Query for o,p in pairs(j)do if n:Match(o)then for q,r in pairs(p)do if not n:Match(q)then for s,t in ipairs(r)do k.version=k.version+1 m:OnExit(i,t)m.version=k.version end end end end end end end function f:ExecOnRemove(i,j)local k=true local l={}for n,o in pairs(j)do local p=l[o]if not p then p={}l[o]=p end table.insert(p,n)k=false end if k then return end local m=self._world for n,o in ipairs(self._onRemove)do for p,q in pairs(l)do if o.Query:Match(p)then for r,s in ipairs(q)do m.version=m.version+1 o:OnRemove(i,s)o.version=m.version end end end end end local function g(i,j,k)local l=i._world local m=i._lastFrameMatchQueries local n=i._currentFrameMatchQueries for o,p in ipairs(j)do local q=true if p.Query then local r=p.Query if m[r]==true or n[r]==true then q=true else q=l:FastCheck(r)n[r]=q end end if q then if(p.ShouldUpdate==nil or p.ShouldUpdate(k))then l.version=l.version+1 p:Update(k)p.version=l.version end end end end function f:ExecProcess(i)self._currentFrameMatchQueries={}g(self,self._process,i)end function f:ExecTransform(i)g(self,self._transform,i)end function f:ExecRender(i)g(self,self._render,i)self._lastFrameMatchQueries=self._currentFrameMatchQueries end function f:ExecTasks(i)while i>0 do local j=false local k,l=0,#self._schedulers-1 while k<=l do k=k+1 local m=self._schedulers[k]local n,o=m.Resume(i)if o then j=true end i=i-(n+0.00001)if(i<=0)then break end end if not j then return end end end local function h(i,j,k,l)local m=i.System m._TaskState="running"if(m.ShouldUpdate==nil or m.ShouldUpdate(j))then k.version=k.version+1 m:Update(j)m.version=k.version end m._TaskState="suspended"l(i)end function f:ScheduleTasks(i)local j=self._world local k={}local l={}local m={}local n={}local o={}local p,q=0,#self._task-1 while p<=q do p=p+1 local s=self._task[p]if(s.System._TaskState=="suspended")then s.System._TaskState="scheduled"local t=false for u,v in pairs(s.Depends)do t=true if o[u]==nil then o[u]={}end table.insert(o[u],s)end if(not t)then table.insert(k,s)end m[s]=true end end local function r(s)s.Thread=nil s.LastExecTime=nil n[s]=true if o[s]then local t=o[s]local u,v=0,#t-1 while u<=v do u=u+1 local w=t[u]if m[w]then local x=true for y,z in pairs(w.Depends)do if n[y]~=true then x=false break end end if x then m[w]=nil w.LastExecTime=0 w.Thread=coroutine.create(h)table.insert(l,w)end end end end end if#k>0 then local s,t=0,#k-1 while s<=t do s=s+1 local v=k[s]m[v]=nil v.LastExecTime=0 v.Thread=coroutine.create(h)table.insert(l,v)end local u u={Resume=function(v)table.sort(l,function(A,B)return A.LastExecTime<B.LastExecTime end)local w=0 local x,y=0,#l-1 while x<=y do x=x+1 local A=l[x]if A.Thread~=nil then local B=os.clock()A.LastExecTime=B coroutine.resume(A.Thread,A,i,j,r)w=w+(os.clock()-B)if(w>v)then break end end end for A,B in ipairs(l)do if B.Thread==nil then local C=table.find(l,B)if C~=nil then table.remove(l,C)end end end local z=#l>0 if(not z)then local A=table.find(self._schedulers,u)if A~=nil then table.remove(self._schedulers,A)end end return w,z end}table.insert(self._schedulers,u)end end return f end b["Timer"]=function()local d=4 local function e(g)local h=0.0 local i=0.0 return function(j,k,l,m)local n=g.DeltaFixed local o=j-i if o>0.25 then o=0.25 end i=j g.Now=j h=h+o if k=="process"then if h>=n then g.Interpolation=1 l(g)local p=0 while(h>=n and p<d)do m(g)p=p+1 g.Process=g.Process+n h=h-n end end else g.Interpolation=math.min(math.max(h/n,0),1)l(g)m(g)end end end local f={}f.__index=f function f.New(g)local h={Now=0,Frame=0,Process=0,Delta=0,DeltaFixed=0,Interpolation=0}local i=setmetatable({Time=h,Frequency=0,_update=e(h)},f)i:SetFrequency(g)return i end function f:SetFrequency(g)if g==nil then g=30 end local h=math.floor(math.abs(g)/2)*2 if h<2 then h=2 end if g~=h then g=h end self.Frequency=g self.Time.DeltaFixed=1000/g/1000 end function f:Update(g,h,i,j)self._update(g,h,i,j)end return f end b["Utility"]=function()local d={}if table.unpack==nil then table.unpack=unpack end if table.find==nil then table.find=function(g,h,i)local j=#g for k=i or 1,j,1 do if g[k]==h then return k end end return nil end end local function e(g)local h={}for i,j in pairs(g)do if type(j)=="table"then j=e(j)end h[i]=j end return h end d.copyDeep=e local function f(g,h)for i,j in pairs(h)do if(type(j)=="table")then local k=g[i]if(k==nil or type(k)~="table")then g[i]=e(j)else g[i]=f(k,j)end else g[i]=j end end return g end d.mergeDeep=f return d end b["World"]=function()local d=c("Timer")local e=c("Event")local f=c("Entity")local g=c("Archetype")local h=c("SystemExecutor")local i=c("EntityRepository")local j={}j.__index=j function j.New(k,l,m)local n=setmetatable({version=0,maxTasksExecTime=0.013333333333333334,_dirty=false,_timer=d.New(l),_systems={},_repository=i.New(),_entitiesCreated={},_entitiesRemoved={},_entitiesUpdated={},_onQueryMatch=e.New(),_onChangeArchetypeEvent=e.New(),},j)n._executor=h.New(n)n._onChangeArchetypeEvent:Connect(function(o,p,q)n:_OnChangeArchetype(o,p,q)end)if(k~=nil)then for o,p in ipairs(k)do n:AddSystem(p)end end if(not m and j.LoopManager)then n._loopCancel=j.LoopManager.Register(n)end return n end function j:SetFrequency(k)k=self._timer:SetFrequency(k)end function j:GetFrequency(k)return self._timer.Frequency end function j:AddSystem(k,l)if k then if l==nil then l={}end if self._systems[k]==nil then self._systems[k]=k.New(self,l)self._executor:SetSystems(self._systems)end end end function j:Entity(...)local k=f.New(self._onChangeArchetypeEvent,{...})self._dirty=true self._entitiesCreated[k]=true k.version=self.version k.isAlive=false return k end function j:Remove(k)if self._entitiesRemoved[k]==true then return end if self._entitiesCreated[k]==true then self._entitiesCreated[k]=nil else self._repository:Remove(k)self._entitiesRemoved[k]=true if self._entitiesUpdated[k]==nil then self._entitiesUpdated[k]=k.archetype end end self._dirty=true k.isAlive=false end function j:Exec(k)if(k.isQueryBuilder)then k=k.Build()end local l,m=self._repository:Query(k)if m then self._onQueryMatch:Fire(k)end return l end function j:FastCheck(k)if(k.isQueryBuilder)then k=k.Build()end return self._repository:FastCheck(k)end function j:OnQueryMatch(k)return self._onQueryMatch:Connect(k)end function j:Update(k,l)self._timer:Update(l,k,function(m)if k=="process"then self._executor:ScheduleTasks(m)end self._executor:ExecTasks(self.maxTasksExecTime)end,function(m)if k=="process"then self._executor:ExecProcess(m)elseif k=="transform"then self._executor:ExecTransform(m)else self._executor:ExecRender(m)end while self._dirty do self._dirty=false local n={}for q,r in pairs(self._entitiesRemoved)do n[q]=self._entitiesUpdated[q]self._entitiesUpdated[q]=nil end self._entitiesRemoved={}self._executor:ExecOnRemove(m,n)n=nil local o={}local p=false for q,r in pairs(self._entitiesUpdated)do if(r~=q.archetype)then p=true o[q]=r end end self._entitiesUpdated={}for q,r in pairs(self._entitiesCreated)do p=true o[q]=g.EMPTY q.isAlive=true self._repository:Insert(q)end self._entitiesCreated={}if p then self._executor:ExecOnExitEnter(m,o)o=nil end end end)end function j:Destroy()if self._loopCancel then self._loopCancel()self._loopCancel=nil end if self._onChangeArchetypeEvent then self._onChangeArchetypeEvent:Destroy()self._onChangeArchetypeEvent=nil end self._repository=nil if self._systems then for k,l in pairs(self._systems)do l:Destroy()end self._systems=nil end self._timer=nil self._ExecPlan=nil self._entitiesCreated=nil self._entitiesUpdated=nil self._entitiesRemoved=nil setmetatable(self,nil)end function j:_OnChangeArchetype(k,l,m)if k.isAlive then if self._entitiesUpdated[k]==nil then self._dirty=true self._entitiesUpdated[k]=l end self._repository:Update(k)k.version=self.version end end return j end return c("ECS")
]]></ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af00020f8c</UniqueId>
			</Properties>
		</Item>
	</Item>
	<Item class="LuaWebService" referent="RBXC9ED9E03516D447A890995FBFB27A2FC">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">Instance</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af000182e4</UniqueId>
		</Properties>
	</Item>
	<Item class="ProcessInstancePhysicsService" referent="RBX5F1FBFACF45F4EA19A9CF2217A5F97BF">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">ProcessInstancePhysicsService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af000182e8</UniqueId>
		</Properties>
	</Item>
	<Item class="Lighting" referent="RBX4725CAF8161D47E3A86274F8683A413D">
		<Properties>
			<Color3 name="Ambient">
				<R>0.274509817</R>
				<G>0.274509817</G>
				<B>0.274509817</B>
			</Color3>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<float name="Brightness">3</float>
			<Color3 name="ColorShift_Bottom">
				<R>0</R>
				<G>0</G>
				<B>0</B>
			</Color3>
			<Color3 name="ColorShift_Top">
				<R>0</R>
				<G>0</G>
				<B>0</B>
			</Color3>
			<float name="EnvironmentDiffuseScale">1</float>
			<float name="EnvironmentSpecularScale">1</float>
			<float name="ExposureCompensation">0</float>
			<Color3 name="FogColor">
				<R>0.752941251</R>
				<G>0.752941251</G>
				<B>0.752941251</B>
			</Color3>
			<float name="FogEnd">100000</float>
			<float name="FogStart">0</float>
			<float name="GeographicLatitude">0</float>
			<bool name="GlobalShadows">true</bool>
			<string name="Name">Lighting</string>
			<Color3 name="OutdoorAmbient">
				<R>0.274509817</R>
				<G>0.274509817</G>
				<B>0.274509817</B>
			</Color3>
			<bool name="Outlines">false</bool>
			<float name="ShadowSoftness">0.200000003</float>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<token name="Technology">3</token>
			<string name="TimeOfDay">14:30:00</string>
			<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af00018303</UniqueId>
		</Properties>
		<Item class="SunRaysEffect" referent="RBX03A6B34760B6477199BB49A06ADCD4C3">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<bool name="Enabled">true</bool>
				<float name="Intensity">0</float>
				<string name="Name">SunRays</string>
				<int64 name="SourceAssetId">-1</int64>
				<float name="Spread">0.100000001</float>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af00018529</UniqueId>
			</Properties>
		</Item>
		<Item class="Atmosphere" referent="RBXD07C58A2F95A4BF191A57E43FB6DEECE">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<Color3 name="Color">
					<R>1</R>
					<G>1</G>
					<B>1</B>
				</Color3>
				<Color3 name="Decay">
					<R>0</R>
					<G>0.768627524</G>
					<B>1</B>
				</Color3>
				<float name="Density">0</float>
				<float name="Glare">0</float>
				<float name="Haze">0</float>
				<string name="Name">Atmosphere</string>
				<float name="Offset">0</float>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af0001851b</UniqueId>
			</Properties>
		</Item>
		<Item class="BloomEffect" referent="RBXF8414CC0BCD1485CB9A251F82AE8EA76">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<bool name="Enabled">true</bool>
				<float name="Intensity">1</float>
				<string name="Name">Bloom</string>
				<float name="Size">24</float>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<float name="Threshold">2</float>
				<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af0001851c</UniqueId>
			</Properties>
		</Item>
		<Item class="DepthOfFieldEffect" referent="RBXC254F31ACDE14240891F667CBBCFD9D5">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<bool name="Enabled">false</bool>
				<float name="FarIntensity">0.100000001</float>
				<float name="FocusDistance">0.0500000007</float>
				<float name="InFocusRadius">30</float>
				<string name="Name">DepthOfField</string>
				<float name="NearIntensity">0.75</float>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af00018520</UniqueId>
			</Properties>
		</Item>
		<Item class="Sky" referent="RBX31641C554FF24B268D89D38E6E8521F5">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<bool name="CelestialBodiesShown">false</bool>
				<float name="MoonAngularSize">11</float>
				<Content name="MoonTextureId"><url>rbxasset://sky/moon.jpg</url></Content>
				<string name="Name">Sky</string>
				<Content name="SkyboxBk"><url>rbxassetid://1194117595</url></Content>
				<Content name="SkyboxDn"><url>rbxassetid://724361046</url></Content>
				<Content name="SkyboxFt"><url>rbxassetid://1194117232</url></Content>
				<Content name="SkyboxLf"><url>rbxassetid://1194117595</url></Content>
				<Content name="SkyboxRt"><url>rbxassetid://1194117232</url></Content>
				<Content name="SkyboxUp"><url>rbxassetid://1194119030</url></Content>
				<int64 name="SourceAssetId">5446998963</int64>
				<int name="StarCount">3000</int>
				<float name="SunAngularSize">21</float>
				<Content name="SunTextureId"><url>rbxasset://sky/sun.jpg</url></Content>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0241ee8883f291ef0181ac6c00b1e4f4</UniqueId>
			</Properties>
		</Item>
	</Item>
	<Item class="DataStoreService" referent="RBX8F78A6280A5C4E60BED9DD2D50B3E625">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="AutomaticRetry">true</bool>
			<bool name="LegacyNamingScheme">false</bool>
			<string name="Name">DataStoreService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af0001851e</UniqueId>
		</Properties>
	</Item>
	<Item class="HttpService" referent="RBXB6E974B4254D4FA7887C4234900229C5">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="HttpEnabled">false</bool>
			<string name="Name">HttpService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af00018521</UniqueId>
		</Properties>
	</Item>
	<Item class="LanguageService" referent="RBX2568EEE3F06340C982C8B73D60FA8AA9">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">LanguageService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af00018522</UniqueId>
		</Properties>
	</Item>
	<Item class="Teams" referent="RBX8689C418DE49464CB5D069A95FDF9E4A">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">Teams</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af0001852a</UniqueId>
		</Properties>
	</Item>
	<Item class="TestService" referent="RBX4C89FB9B784B4C74A87D93D91C327565">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="AutoRuns">true</bool>
			<string name="Description"></string>
			<bool name="ExecuteWithStudioRun">false</bool>
			<bool name="Is30FpsThrottleEnabled">true</bool>
			<bool name="IsPhysicsEnvironmentalThrottled">true</bool>
			<bool name="IsSleepAllowed">true</bool>
			<string name="Name">TestService</string>
			<int name="NumberOfPlayers">0</int>
			<double name="SimulateSecondsLag">0</double>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<double name="Timeout">10</double>
			<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af0001852c</UniqueId>
		</Properties>
	</Item>
	<Item class="VirtualInputManager" referent="RBX35E0F67273514BF8AB9FB77F74D5B99D">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">VirtualInputManager</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af0001852e</UniqueId>
		</Properties>
	</Item>
	<Item class="ProximityPromptService" referent="RBX4F136E80680543DF9258D23CB2D0D95F">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="Enabled">true</bool>
			<int name="MaxPromptsVisible">16</int>
			<string name="Name">ProximityPromptService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">0cf7e2b366cacefc0180a4af00020ca6</UniqueId>
		</Properties>
	</Item>
	<SharedStrings>
		<SharedString md5="yuZpQdnvvUBOTYh1jqZ2cA=="></SharedString>
	</SharedStrings>
</roblox>